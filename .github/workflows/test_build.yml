name: Test build

on:
  workflow_call:
    inputs:
      repository_name:
        required: true
        type: string
      release_version:
        required: true
        type: string
      image_name:
        required: true
        type: string
      release_name:
        required: false
        type: string
        default: None
      release_body:
        required: false
        type: string
        default: None

    secrets:
      DOCKER_USERNAME:
        required: true
      DOCKER_PASSWORD:
        required: true
      AUTH_TOKEN:
        required: true


jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 2
    steps:
      - uses: actions/checkout@v2
      # - uses: actions-rs/toolchain@v1
      #   with:
      #     toolchain: stable

      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d %H:%M')"

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${{ inputs.release_version }}
  
      - name: Timestamp
        shell: bash
        run: |
          TIMESTAMP=${{ inputs.build_timestamp }}
          if [[ -z ${TIMESTAMP} ]]; then
            TIMESTAMP=$(date --utc +'%F %H:%M')
          fi
          echo TIMESTAMP=${TIMESTAMP} >> $GITHUB_ENV

      - name: Echo
        run: |
          echo "image_name: ${{ inputs.image_name }}"
          echo "VERSION: ${{ steps.get_version.outputs.VERSION }}"
          echo "Released: ${{ inputs.repository_name }}"
          echo "Version: ${{ inputs.release_version }}"
          echo "Date: ${{ steps.date.outputs.date }} UTC"
          echo "Release Name: ${{ inputs.release_name }}"
          echo "Changelog: ${{ inputs.release_body }}"
          echo "ID: ${{ github.run_id }}"
          echo "Message: ${{ github.event.commits[0].message }}"
          echo "TIMESTAMP: ${TIMESTAMP}"

  dump:
    runs-on: ubuntu-latest
    steps:
      -
        name: Dump context
        uses: crazy-max/ghaction-dump-context@v2
            
  notify:
    name: notify release
    needs: [build]
    # runs-on: self-hosted
    timeout-minutes: 2
    steps:
    
    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y-%m-%d %H:%M')"
        
    # - uses: actions/checkout@v4
    - name: Telegram Notify
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        format: html
        message: |
          <b>Released</b> <i>${{ inputs.repository_name }}</i>. 
          Version: <i>${{ inputs.release_version }}<i>
          Date: <i>${{ steps.date.outputs.date }} UTC</i>
          Release Name: <i>${{ inputs.release_name }}</i>
          Changelog: <i>${{ inputs.release_body }}</i>
          ID: <i>${{ github.run_id }}</i>
