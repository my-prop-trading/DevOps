name: Cargo build

on:
  # workflow_dispatch:
  # release:
  #   types: [published]
  workflow_call:
    inputs:
      image_name:
        required: true
        type: string
      # repository_name:
      #   required: true
      #   type: string
      # release_version:
      #   required: true
      #   type: string
      # branch_name:
      #   required: true
      #   type: string
        
    secrets:
      # DOCKER_USERNAME:
      #   required: true
      # DOCKER_PASSWORD:
      #   required: true
      AUTH_TOKEN:
        required: true
      SSH_PRIVAT_KEY:
        required: false
      TELEGRAM_TO:
        required: false
      TELEGRAM_TOKEN:
        required: false

jobs:
  print-tag:
    runs-on: ubuntu-latest
    # if:  ${{ inputs.print_tags }} 
    steps:
      - name: Dump context
        uses: crazy-max/ghaction-dump-context@v2
      - name: Print the input tag to STDOUT
        run: |
          echo "-------------------------------------------------------"
          echo  The repository_name are ${{ github.event.repository.name }}
          echo  The release_version are ${{ github.event.release.tag_name }}
          echo  The image_name are ${{ inputs.image_name }}
          echo  The branch_name are ${{ github.event.release.target_commitish }}
          echo "-------------------------------------------------------"
        #   echo  The TELEGRAM_TO are ${{ secrets.TELEGRAM_TO }}
        #   echo "-------------------------------------------------------"
      
  prepare-deploy:
    runs-on: ubuntu-latest
    steps:
    # - name: Get the version
    #   id: get_version
    #   run: echo "VERSION=${{ github.ref_name }}" >> $GITHUB_OUTPUT
        
    - name: get docker yamls
      uses: actions/checkout@v3
      with:
        repository: my-prop-trading/docker-infrastructure
        ref: ${{ github.event.release.target_commitish }}
        token: ${{ secrets.AUTH_TOKEN }}
    - run: |
        pwd
        ls -la
        reg=s"|/${{ github.event.repository.name }}:[0-9].*|/${{ github.event.repository.name }}:${{ github.event.release.tag_name }}|g"
        echo $reg
        find . -type f -name "*.*ml" -exec sed -i -r $reg {} \;
        git config user.name github-actions
        git config user.email github-actions@github.com
        if git status | grep -q modified; then git commit -a -m "Update ${{ github.event.repository.name }}:${{ github.event.release.tag_name }}" && git push; fi

  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Conditions
      id: condition
      run: |
        echo HAS_SSH_KEY=${{ secrets.SSH_KEY != '' }} >> $GITHUB_OUTPUT
        if [[ ${{ github.event.release.target_commitish }} == 'test' || ${{ github.event.release.target_commitish }} == 'alpha' ]]; then
          echo HOST="5.75.164.162" >> $GITHUB_OUTPUT
          echo PORT="22" >> $GITHUB_OUTPUT
          echo USERNAME="root" >> $GITHUB_OUTPUT
        fi
        if [[ ${{ github.event.release.target_commitish }} == 'beta' ]]; then
          echo HOST="116.203.241.93" >> $GITHUB_OUTPUT
          echo PORT="22" >> $GITHUB_OUTPUT
          echo USERNAME="prop" >> $GITHUB_OUTPUT
        fi
        if [[ ${{ github.event.release.target_commitish }} == 'gamma' ]]; then
          echo HOST="159.69.23.198" >> $GITHUB_OUTPUT
          echo PORT="22" >> $GITHUB_OUTPUT
          echo USERNAME="prop" >> $GITHUB_OUTPUT
        fi
    - name: Test Connect
      run: |
        echo ${{ steps.condition.outputs.HOST }}
        echo ${{ steps.condition.outputs.USERNAME }}
        echo ${{ steps.condition.outputs.PORT }}
    
    - name: Deploy using remote ssh commands
      if: steps.condition.outputs.HAS_SSH_KEY == 'true'
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ steps.condition.outputs.HOST }}
        username: ${{ steps.condition.outputs.USERNAME }}
        key: ${{ secrets.SSH_PRIVAT_KEY }}
        port: ${{ steps.condition.outputs.PORT }}
        script: whoami
