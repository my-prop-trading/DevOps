name: .NET build

on:
  workflow_call:
    inputs:
      repository_name:
        required: true
        type: string
      release_version:
        required: true
        type: string
      image_name:
        required: true
        type: string
    secrets:
      DOCKER_USERNAME:
        required: true
      DOCKER_PASSWORD:
        required: true
      AUTH_TOKEN:
        required: true


jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v3

    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::${{ inputs.release_version }}
        
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.*
        source-url: https://nuget.pkg.github.com/myproptrading/index.json
      env:
        NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

    - name: Restore
      run: dotnet restore
      continue-on-error: true

    - name: Build microservice
      run: dotnet build --no-restore --configuration Release /p:AssemblyVersion=${{ inputs.release_version }}

    - name: Test microservice
      run: dotnet test --no-build --configuration Release

    - name: Publish Service
      run: dotnet publish ./${{ inputs.repository_name }}/${{ inputs.repository_name }}.csproj --configuration Release /p:AssemblyVersion=${{ inputs.release_version }} --output ./publish-api

    - name: Check Service dir
      run: ls ./publish-api

    - id: string
      uses: ASzc/change-string-case-action@v1
      with:
        string: ${{ inputs.repository_name }}
        
    - name: ls -la
      run: ls -la

    - name: Docker login
      env:
        DOCKER_USER: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASS: ${{ secrets.DOCKER_PASSWORD }}
      run: |          
        echo "$DOCKER_PASS" | docker login --username "$DOCKER_USER" --password-stdin   
    - name: Docker Build and Publish
      run: |          
        docker build -t myproptrading/backoffice:${{ steps.get_version.outputs.VERSION }} ./Backoffice/Dockerfile
        docker push myproptrading/backoffice:${{ steps.get_version.outputs.VERSION }}
  
  docker-deploy:
    needs: [build]
    runs-on: ubuntu-latest
    
    steps:
    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::${{ inputs.release_version }}
        
    - name: get uat docker yamls
      uses: actions/checkout@v2
      with:
        repository: my-prop-trading/docker-infrastructure
        ref: main
        token: ${{ secrets.AUTH_TOKEN }}
    - run: |
        reg=s"/backoffice:[0-9].*/backoffice:${{ steps.get_version.outputs.VERSION }}/g"
        echo $reg
        find . -type f -name "*.*ml" -exec sed -i -r $reg {} \;
        git config user.name github-actions
        git config user.email github-actions@github.com
        if git status | grep -q modified; then git commit -a -m "Update ${{ inputs.repository_name }}:${{ steps.get_version.outputs.VERSION }}" && git push; fi
