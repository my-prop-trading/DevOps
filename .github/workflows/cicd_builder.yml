name: CI/CD Main Pipeline

on:
  workflow_call:
    inputs:
      language:
        required: true
        type: string
      repository_name:
        required: true
        type: string

    secrets:
      TELEGRAM_NOTIFICATION_TOKEN:
        required: false
      TELEGRAM_GITHAB_CHAT_ID:
        required: false

jobs:
  test:
    # runs-on: ubuntu-20.04
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      # for TypeScript
      - name: Setup Node.js (for TypeScript)
        if: ${{ inputs.language == 'typescript' }}
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Testing (for TypeScript)
        if: ${{ inputs.language == 'typescript' }}
        run: |
          npm install
          npm test

      # for Rust
      # - name: Install RUST dependencies
      #   run: |
      #     sudo apt update
      #     sudo apt-get install -y protobuf-compiler gcc-10
      # #     sudo apt install -y wget unzip
      # #     wget https://github.com/protocolbuffers/protobuf/releases/download/v3.18.1/protoc-3.18.1-linux-x86_64.zip
      # #     unzip protoc-3.18.1-linux-x86_64.zip -d /usr/local
      # #     rm protoc-3.18.1-linux-x86_64.zip
        
      # - name: Setup RUST (for Rust)
      #   if: ${{ inputs.language == 'rust' }}
      #   uses: actions-rs/toolchain@v1
      #   with:
      #     toolchain: stable
      #     override: true

      - name: Setup RUST (for Rust)
        if: ${{ inputs.language == 'rust' }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Testing (for Rust)
        if: ${{ inputs.language == 'rust' }}
        run: |
          rustup update
          rustup component add clippy
          rustup install nightly 
          cargo check
          cargo build --release
          cargo test --verbose
          rustc --version && cargo --version


      # for C#
      - name: Setup .NET (for C#)
        if: ${{ inputs.language == 'csharp' }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.*'

      - name: Testing (for C#)
        if: ${{ inputs.language == 'csharp' }}
        run: |
          dotnet build
          dotnet test

  notify-telegram-test-error:
    needs: test
    runs-on: ubuntu-20.04
    if: failure()
    steps:
      - name: Send test error notification
        run: |
          user="Triggered by: ${{ github.actor }}"
          reason="Last commit: ${{ github.event.head_commit.message }}"
          date="Date: $(date -d "+2 hours" +"%d.%m.%Y %H:%M:%S")"
          pipeline_url="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        
          # send Telegram notification:
          curl --request POST --header "Content-Type: application/json" \
            --data "{\"text\":\"[${{ inputs.language }}] Test error:\n\n>>>  ${{ inputs.repository_name }}\n\n $user\n $reason\n $date\n\n Please check action here: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}\"}" \
            "https://api.telegram.org/bot${{ secrets.TELEGRAM_NOTIFICATION_TOKEN }}/sendMessage?chat_id=${{ secrets.TELEGRAM_GITHAB_CHAT_ID }}"

