name: Cargo build

on:
  workflow_call:
    inputs:
      repository_name:
        required: true
        type: string
      release_version:
        required: true
        type: string
      image_name:
        required: true
        type: string
    secrets:
      DOCKER_USERNAME:
        required: true
      DOCKER_PASSWORD:
        required: true
      AUTH_TOKEN:
        required: true


jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${{ inputs.release_version }}
        
      - name: Updating version
        run: sed -i -e 's/^version = .*/version = "${{ steps.get_version.outputs.VERSION }}"/' Cargo.toml

      - name: Install Protoc
        uses: arduino/setup-protoc@v1            
      - run: cargo build --release

      - name: Docker login
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASS: ${{ secrets.DOCKER_PASSWORD }}
        run: |          
          echo "$DOCKER_PASS" | docker login --username "$DOCKER_USER" --password-stdin   
      - name: Docker Build and Publish
        run: |          
          docker build -t ${{ inputs.image_name }}:${{ steps.get_version.outputs.VERSION }} .
          docker push ${{ inputs.image_name }}:${{ steps.get_version.outputs.VERSION }}
  
  docker-deploy:
    needs: [build]
    runs-on: ubuntu-latest
    
    steps:
    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::${{ inputs.release_version }}
        
    - name: get uat docker yamls
      uses: actions/checkout@v2
      with:
        repository: my-prop-trading/docker-infrastructure
        ref: main
        token: ${{ secrets.AUTH_TOKEN }}
    - run: |
        reg=s"/${{ inputs.repository_name }}:[0-9].*/${{ inputs.repository_name }}:${{ steps.get_version.outputs.VERSION }}/g"
        echo $reg
        find . -type f -name "*.*ml" -exec sed -i -r $reg {} \;
        git config user.name github-actions
        git config user.email github-actions@github.com
        if git status | grep -q modified; then git commit -a -m "Update ${{ inputs.repository_name }}:${{ steps.get_version.outputs.VERSION }}" && git push; fi
